{"version":3,"sources":["components/main.jsx","components/lobby.jsx","services/login.jsx","services/signup.jsx","services/lobby.jsx","components/notification.jsx","components/room.jsx","App.js","index.js"],"names":["Form","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","status","className","onSubmit","id","value","onChange","type","Lobby","handleCreateNameChange","handleCreatePassChange","handleJoinNameChange","handleJoinPassChange","createName","createPass","joinName","joinPass","handleCreate","handleDelete","handleJoin","handleLeave","handleEnter","handleLogout","user","rooms","placeholder","map","room","key","roomName","onClick","roomCreator","event","navigator","clipboard","writeText","target","listRooms","login","credential","a","axios","post","response","data","signup","token","createRoom","newRoom","config","headers","Authorization","leaveRoom","patch","deleteRoom","delete","joinRoom","enterRoom","get","setToken","newToken","getRooms","then","getRoom","sendMessage","newMessage","Notification","message","Room","handleMessageChange","exitRoom","messageContent","messages","moment","date","fromNow","content","spellCheck","form","App","useState","userNameField","setUserNameField","passField","setPassField","setUser","setRooms","setStatus","createRoomName","setCreateRoomName","createRoomPass","setCreateRoomPass","joinRoomName","setJoinRoomName","joinRoomPass","setJoinRoomPass","currentRoom","setCurrentRoom","messageToSend","setMessageToSend","errorMessage","setErrorMessage","window","localStorage","getItem","useEffect","loggedUserJSON","JSON","parse","lobbyService","catch","_","console","log","length","interval","setInterval","clearInterval","handleLogin","preventDefault","loginService","setItem","stringify","setTimeout","handleSignup","err","Error","error","trim","signupService","includes","handleCreateRoom","roomPass","concat","handleLeaveRoom","filter","handleDeleteRoom","handleJoinRoom","handleEnterRoom","scrollTo","document","body","scrollHeight","handleSendMessage","changeStatus","handleFormSubmit","removeItem","ReactDOM","render","getElementById"],"mappings":"8PAqCeA,EAnCF,SAAC,GAOP,IANHC,EAME,EANFA,aACAC,EAKE,EALFA,qBACAC,EAIE,EAJFA,qBACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,SACAC,EACE,EADFA,OAEA,OACI,yBAAKC,UAAU,aACX,0BAAMC,SAAUP,GACZ,yBAAKM,UAAU,aAAf,YAGA,2BACIE,GAAG,WACHC,MAAON,EACPO,SAAUT,IAEd,yBAAKK,UAAU,aAAf,YAGA,2BACIE,GAAG,WACHG,KAAK,WACLF,MAAOL,EACPM,SAAUR,IAEd,6BACA,4BAAQI,UAAU,cAAcK,KAAK,SAASH,GAAG,gBAAgBH,EAAS,SAAW,cCgCtFO,EA3DD,SAAC,GAiBR,IAhBHC,EAgBE,EAhBFA,uBACAC,EAeE,EAfFA,uBACAC,EAcE,EAdFA,qBACAC,EAaE,EAbFA,qBACAC,EAYE,EAZFA,WACAC,EAWE,EAXFA,WACAC,EAUE,EAVFA,SACAC,EASE,EATFA,SACAC,EAQE,EARFA,aACAC,EAOE,EAPFA,aACAC,EAME,EANFA,WACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,KACAC,EACE,EADFA,MAwBA,OACI,yBAAKtB,UAAU,SACX,0BAAMA,UAAU,cAAcC,SAAUc,GACpC,2BAAOb,GAAG,WAAWqB,YAAY,kBAAkBpB,MAAOQ,EAAYP,SAAUG,IAChF,2BAAOF,KAAK,WAAWH,GAAG,WAAWqB,YAAY,sBAAsBpB,MAAOS,EAAYR,SAAUI,IACpG,4BAAQH,KAAK,UAAb,gBAEJ,0BAAML,UAAU,cAAcC,SAAUgB,GACpC,2BAAOf,GAAG,SAASqB,YAAY,gBAAgBpB,MAAOU,EAAUT,SAAUK,IAC1E,2BAAOJ,KAAK,WAAWH,GAAG,WAAWqB,YAAY,sBAAsBpB,MAAOW,EAAUV,SAAUM,IAClG,4BAAQL,KAAK,UAAb,cAEJ,0CAjCU,SAACiB,GAAD,OACd,6BACI,4BACKA,EAAME,KAAI,SAAAC,GAAI,OACX,wBAAIzB,UAAU,gBAAgB0B,IAAKD,EAAKvB,IACpC,yBAAKF,UAAU,SAAQ,4BAAI,2BACvByB,EAAKE,WACC,6BACN,4BAAQ3B,UAAU,cAAcG,MAAOsB,EAAKvB,GAAI0B,QAAST,GAAzD,cACA,4BAAQnB,UAAU,cAAcG,MAAOsB,EAAKvB,GAAI0B,QAASV,GAAzD,cACCO,EAAKI,cAAgBR,EAAKA,KAAKxB,UAC5B,4BAAQG,UAAU,cAAcG,MAAOsB,EAAKvB,GAAI0B,QAASZ,GAAzD,eAEJ,4BAAQhB,UAAU,cAAcG,MAAOsB,EAAKvB,GAAI0B,QAAS,SAACE,GAAD,OAAWC,UAAUC,UAAUC,UAAUH,EAAMI,OAAO/B,SAA/G,sBAqBfgC,CAAUb,GACX,4BAAQpB,GAAG,SAASF,UAAU,cAAc4B,QAASR,GAArD,a,gBClDG,GAAEgB,MALN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACaC,IAAMC,KAHjB,SAG+BH,GADjC,cACJI,EADI,yBAEHA,EAASC,MAFN,2CAAH,uDCKI,GAAEC,OALL,uCAAG,WAAMN,GAAN,eAAAC,EAAA,sEACYC,IAAMC,KAHjB,UAG+BH,GADhC,cACLI,EADK,yBAEJA,EAASC,MAFL,2CAAH,uDCARE,EAAQ,KAaNC,EAAU,uCAAG,WAAMC,GAAN,iBAAAR,EAAA,6DACTS,EAAS,CAAEC,QAAS,CAAEC,cAAeL,IAD5B,SAGQL,IAAMC,KAlBjB,QAkB+BM,EAASC,GAHrC,cAGTN,EAHS,yBAIRA,EAASC,MAJD,2CAAH,sDAOVQ,EAAS,uCAAG,WAAMhD,GAAN,eAAAoC,EAAA,6DACRS,EAAS,CAAEC,QAAS,CAAEC,cAAeL,IAD7B,SAGRL,IAAMY,MAAN,UAzBM,QAyBN,kBAAgCjD,GAAM,KAAM6C,GAHpC,2CAAH,sDAMTK,EAAU,uCAAG,WAAMlD,GAAN,eAAAoC,EAAA,6DACTS,EAAS,CAAEC,QAAS,CAAEC,cAAeL,IAD5B,SAGTL,IAAMc,OAAN,UA/BM,QA+BN,YAA2BnD,GAAM6C,GAHxB,2CAAH,sDAMVO,EAAQ,uCAAG,WAAOpD,EAAIJ,GAAX,eAAAwC,EAAA,6DACPS,EAAS,CAAEC,QAAS,CAAEC,cAAeL,IAD9B,SAGPL,IAAMY,MAAN,UArCM,QAqCN,iBAA+BjD,GAAM,CAAEJ,YAAYiD,GAH5C,2CAAH,wDAMRQ,EAAS,uCAAG,WAAMrD,GAAN,iBAAAoC,EAAA,6DACRS,EAAS,CAAEC,QAAS,CAAEC,cAAeL,IAD7B,SAGSL,IAAMiB,IAAN,UA3CX,QA2CW,YAAwBtD,GAAM6C,GAHvC,cAGRN,EAHQ,yBAIPA,EAASC,MAJF,2CAAH,sDAeA,GAAEe,SAnDA,SAAAC,GACbd,EAAK,iBAAac,IAkDKC,SA/CV,WACb,IAAMZ,EAAS,CAAEC,QAAS,CAAEC,cAAeL,IAG3C,OADgBL,IAAMiB,IAXV,QAWuBT,GACpBa,MAAK,SAAAnB,GAAQ,OAAIA,EAASC,SA2CRG,aAAYK,YAAWI,WAAUF,aAAYG,YAAWM,QAF7EN,EAEsFO,YARrF,uCAAG,WAAO5D,EAAI6D,GAAX,iBAAAzB,EAAA,6DACVS,EAAS,CAAEC,QAAS,CAAEC,cAAeL,IAD3B,SAEOL,IAAMC,KAAN,UAjDX,QAiDW,YAAyBtC,EAAzB,YAAuC6D,EAAYhB,GAF1D,cAEVN,EAFU,yBAGTA,EAASC,MAHA,2CAAH,yDClCFsB,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,yBAAKjE,UAAU,SACViE,I,yBCiCEC,EArCF,SAAC,GAMP,IALHC,EAKE,EALFA,oBACAC,EAIE,EAJFA,SACAN,EAGE,EAHFA,YACAO,EAEE,EAFFA,eACA5C,EACE,EADFA,KAEA,OACI,6BACI,6BACI,wBAAIzB,UAAU,cAAd,cAAuCyB,EAAKE,UAC5C,4BAAQ3B,UAAU,iBAAiB4B,QAASwC,GAA5C,aACA,wBAAIpE,UAAU,YACTyB,EAAK6C,SAAS9C,KAAI,SAAAyC,GAAO,OACtB,wBAAIjE,UAAU,UAAU0B,IAAKuC,EAAQ/D,IACjC,uBAAGF,UAAU,eAAeiE,EAAQ5C,MACpC,qCAAWkD,IAAON,EAAQO,MAAMC,WAChC,4BACI,4BAAKR,EAAQS,gBAMjC,6BACI,0BAAMxE,GAAG,cAAcF,UAAU,cAAcC,SAAU6D,GACrD,kBAAC,IAAD,CACI9D,UAAU,eAAe2E,WAAW,OACpCxE,MAAOkE,EAAgBO,KAAK,cAC5BxE,SAAU+D,IACd,4BAAQjE,GAAG,oBAAoBG,KAAK,UAApC,YCkRLwE,MA3Sf,WAAgB,IAAD,EAC6BC,mBAAS,IADtC,mBACNC,EADM,KACSC,EADT,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGWJ,mBAAS,MAHpB,mBAGNzD,EAHM,KAGA8D,EAHA,OAIaL,mBAAS,IAJtB,mBAINxD,EAJM,KAIC8D,EAJD,OAKeN,oBAAS,GALxB,mBAKN/E,EALM,KAKEsF,EALF,OAM+BP,mBAAS,IANxC,mBAMNQ,EANM,KAMUC,EANV,OAO+BT,mBAAS,IAPxC,mBAONU,EAPM,KAOUC,EAPV,OAQ2BX,mBAAS,IARpC,mBAQNY,EARM,KAQQC,EARR,OAS2Bb,mBAAS,IATpC,mBASNc,EATM,KASQC,EATR,OAUyBf,mBAAS,MAVlC,mBAUNgB,EAVM,KAUOC,EAVP,OAW6BjB,mBAAS,IAXtC,mBAWNkB,GAXM,KAWSC,GAXT,QAY2BnB,mBAAS,MAZpC,qBAYNoB,GAZM,MAYQC,GAZR,MAcPvD,GAAQwD,OAAOC,aAAaC,QAAQ,gBAE1CC,qBAAU,WACR,IAAMC,EAAiB5D,GACvB,GAAI4D,EAAgB,CAClB,IAAMnF,EAAOoF,KAAKC,MAAMF,GACxBrB,EAAQ9D,GACRsF,EAAalD,SAASpC,EAAKuB,UAE5B,CAACA,KAEJ2D,qBAAU,WACRI,EACGhD,WACAC,MAAK,SAAAtC,GACJ8D,EAAS9D,MACRsF,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAI,+BAC3B,CAACzF,EAAM0F,OAAQpE,KAElB2D,qBAAU,WAER,IAAMU,EAAWC,aAAY,WACP,OAAhBpB,GACFa,EACG9C,QAAQiC,EAAY5F,IACpB0D,MAAK,SAAAnC,GACJsE,EAAetE,MACdmF,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAI,yCAE7B,KAEH,OAAO,kBAAMI,cAAcF,MAC1B,CAACnB,IAGJ,IAAMsB,GAAW,uCAAG,WAAOtF,GAAP,eAAAQ,EAAA,6DAClBR,EAAMuF,iBADY,kBAIGC,EAAalF,MAAM,CACpCvC,SAAUkF,EACVjF,SAAUmF,IANI,OAIV5D,EAJU,OAShB+E,OAAOC,aAAakB,QAClB,eAAgBd,KAAKe,UAAUnG,IAGjCsF,EAAalD,SAASpC,EAAKuB,OAC3BuC,EAAQ9D,GACR2D,EAAiB,IACjBE,EAAa,IAhBG,kDAkBhBiB,GAAgB,qBAChBsB,YAAW,WACTtB,GAAgB,QACf,KArBa,0DAAH,sDAyBXuB,GAAY,uCAAG,WAAO5F,GAAP,eAAAQ,EAAA,yDACnBR,EAAMuF,iBADa,UAKXM,EAAM,IAAIC,OACZnF,SAAW,CACbC,KAAM,CACJmF,MAAO,yDAIP5C,EAAU6C,OAAOd,OAAS,GAZb,sBAYsBW,EAZtB,uBAcXI,EAAcpF,OAAO,CACzB9C,SAAUkF,EAAc+C,OACxBhI,SAAUmF,EAAU6C,SAhBL,OAmBjB9C,EAAiB,IACjBE,EAAa,IACbG,GAAWtF,GArBM,kDAuBb,KAAM0C,SAASC,KAAKmF,MAAMG,SAAS,0BACrC7B,GAAgB,8CAEhBA,GAAgB,KAAM1D,SAASC,KAAKmF,OAEtCJ,YAAW,WACTtB,GAAgB,QACf,KA9Bc,0DAAH,sDAkCZ8B,GAAgB,uCAAG,WAAOnG,GAAP,iBAAAQ,EAAA,yDAEvBR,EAAMuF,iBAFiB,UAMfM,EAAM,IAAIC,OACZnF,SAAW,CACbC,KAAM,CACJmF,MAAO,8DAIPrC,EAAesC,OAAOd,OAAS,GAbd,sBAauBW,EAbvB,uBAcChB,EAAa9D,WAAW,CAC5ClB,SAAU2D,EAAewC,OACzBI,SAAU1C,EAAesC,SAhBN,OAcfhF,EAde,OAmBrBsC,EAAS9D,EAAM6G,OAAOrF,IACtByC,EAAkB,IAClBE,EAAkB,IArBG,kDAuBrBU,GAAgB,KAAM1D,SAASC,KAAKmF,OACpCJ,YAAW,WACTtB,GAAgB,QACf,KA1BkB,0DAAH,sDA8BhBiC,GAAe,uCAAG,WAAOtG,GAAP,eAAAQ,EAAA,sEAGdpC,EAAK4B,EAAMI,OAAO/B,MAHJ,SAIdwG,EAAazD,UAAUhD,GAJT,OAMpBkF,EAAS9D,EAAM+G,QAAO,SAAC5G,GAAD,OAAUA,EAAKvB,KAAOA,MANxB,gDAQpBiG,GAAgB,KAAM1D,SAASC,KAAKmF,OACpCJ,YAAW,WACTtB,GAAgB,QACf,KAXiB,yDAAH,sDAefmC,GAAgB,uCAAG,WAAOxG,GAAP,eAAAQ,EAAA,sEAGfpC,EAAK4B,EAAMI,OAAO/B,MAHH,SAIfwG,EAAavD,WAAWlD,GAJT,OAMrBkF,EAAS9D,EAAM+G,QAAO,SAAC5G,GAAD,OAAUA,EAAKvB,KAAOA,MANvB,gDAQrBiG,GAAgB,KAAM1D,SAASC,KAAKmF,OACpCJ,YAAW,WACTtB,GAAgB,QACf,KAXkB,yDAAH,sDAehBoC,GAAc,uCAAG,WAAOzG,GAAP,SAAAQ,EAAA,6DACrBR,EAAMuF,iBADe,kBAIbV,EAAarD,SAASoC,EAAcE,GAJvB,OAKnBR,EAAS9D,EAAM6G,OAAOzC,IACtBC,EAAgB,IAChBE,EAAgB,IAPG,gDASnBM,GAAgB,KAAM1D,SAASC,KAAKmF,OACpCJ,YAAW,WACTtB,GAAgB,QACf,KAZgB,yDAAH,sDAgBdqC,GAAe,uCAAG,WAAO1G,GAAP,eAAAQ,EAAA,+EAGDqE,EAAapD,UAAUzB,EAAMI,OAAO/B,OAHnC,OAGdsB,EAHc,OAIpBsE,EAAetE,GACf2E,OAAOqC,SAAS,EAAGC,SAASC,KAAKC,cALb,gDAOpBzC,GAAgB,KAAM1D,UACtBgF,YAAW,WACTtB,GAAgB,QACf,KAViB,yDAAH,sDAcf0C,GAAiB,uCAAG,WAAO/G,GAAP,eAAAQ,EAAA,sEAEtBR,EAAMuF,iBAFgB,SAICV,EAAa7C,YAAYgC,EAAY5F,GAAI,CAAEwE,QAASsB,KAJrD,OAIhBvD,EAJgB,OAKtBsD,EAAetD,GACfwD,GAAiB,IANK,gDAQtBE,GAAgB,KAAM1D,SAASC,KAAKmF,OACpCJ,YAAW,WACTtB,GAAgB,QACf,KAXmB,yDAAH,sDAejB2C,GAAe,WACnBzD,GAAWtF,GACXiF,EAAiB,IACjBE,EAAa,KAGT6D,GAAmB,SAAChJ,GAAD,OAAYA,EAASqH,GAAcM,IAkE5D,OACE,6BACE,wBAAI1H,UAAU,UAAd,eACA,kBAAC,EAAD,CAAciE,QAASiC,KACN,OAAhBJ,EAAgC,OAATzE,EAlExB,8BACc,IAAXtB,EAAkB,uBAAGC,UAAU,UAAb,cAAuC,uBAAGA,UAAU,UAAb,eAC1D,kBAAC,EAAD,CACEN,aAAcqJ,GAAiBhJ,GAC/BJ,qBAAsB,SAACmC,GAAD,OAAWkD,EAAiBlD,EAAMI,OAAO/B,QAC/DP,qBAAsB,SAACkC,GAAD,OAAWoD,EAAapD,EAAMI,OAAO/B,QAC3DJ,OAAQA,EACRF,SAAUkF,EACVjF,SAAUmF,KACA,IAAXlF,EACC,4BAAQC,UAAU,cAAc4B,QAASkH,IAAzC,2BAIA,4BAAQ9I,UAAU,cAAc4B,QAASkH,IAAzC,6BAQJ,kBAAC,EAAD,CACEvI,uBAAwB,SAACuB,GAAD,OAAWyD,EAAkBzD,EAAMI,OAAO/B,QAClEK,uBAAwB,SAACsB,GAAD,OAAW2D,EAAkB3D,EAAMI,OAAO/B,QAClEM,qBAAsB,SAACqB,GAAD,OAAW6D,EAAgB7D,EAAMI,OAAO/B,QAC9DO,qBAAsB,SAACoB,GAAD,OAAW+D,EAAgB/D,EAAMI,OAAO/B,QAC9DQ,WAAY2E,EACZ1E,WAAY4E,EACZ3E,SAAU6E,EACV5E,SAAU8E,EACV7E,aAAckH,GACdjH,aAAcsH,GACdpH,YAAakH,GACbnH,WAAYsH,GACZpH,YAAaqH,GACbpH,aAAc,SAACU,GACbsE,OAAOC,aAAa2C,WAAW,gBAC/BrC,EAAalD,SAAS,MACtBsC,EAAe,MACfZ,EAAQ,OAEV9D,KAAMA,EACNC,MAAOA,IAMT,kBAAC,EAAD,CACEG,KAAMqE,EACN1B,SAAU,kBAAM2B,EAAe,OAC/B1B,eAAgB2B,GAChBlC,YAAa+E,GACb1E,oBAAqB,SAACrC,GACpBmE,GAAiBnE,EAAMI,OAAO/B,OAC9BiG,OAAOqC,SAAS,EAAGC,SAASC,KAAKC,mBC5R3CK,IAASC,OACL,kBAAC,EAAD,MACAR,SAASS,eAAe,W","file":"static/js/main.94959a30.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({\n    handleSubmit,\n    handleUsernameChange,\n    handlePasswordChange,\n    username,\n    password,\n    status,\n}) => {\n    return (\n        <div className='fieldInfo'>\n            <form onSubmit={handleSubmit}>\n                <div className='fieldInfo'>\n                    Username\n                </div>\n                <input\n                    id='username'\n                    value={username}\n                    onChange={handleUsernameChange}\n                />\n                <div className='fieldInfo'>\n                    Password\n                </div>\n                <input\n                    id='password'\n                    type=\"password\"\n                    value={password}\n                    onChange={handlePasswordChange}\n                />\n                <br></br>\n                <button className='buttonLogin' type='submit' id='login-button'>{status ? 'Log In' : 'Sign Up'}</button>\n            </form>\n        </div >\n    )\n}\n\nexport default Form","import React from 'react'\n\n\n\nconst Lobby = ({\n    handleCreateNameChange,\n    handleCreatePassChange,\n    handleJoinNameChange,\n    handleJoinPassChange,\n    createName,\n    createPass,\n    joinName,\n    joinPass,\n    handleCreate,\n    handleDelete,\n    handleJoin,\n    handleLeave,\n    handleEnter,\n    handleLogout,\n    user,\n    rooms\n}) => {\n\n    const listRooms = (rooms) => (\n        <nav>\n            <ul>\n                {rooms.map(room => (\n                    <li className='roomSelection' key={room.id}>\n                        <div className='rooms'><em><b>{\n                            room.roomName\n                        }</b></em><hr></ hr>\n                            <button className='roomButtons' value={room.id} onClick={handleEnter}>Enter Room</ button>\n                            <button className='roomButtons' value={room.id} onClick={handleLeave}>Leave Room</ button>\n                            {room.roomCreator === user.user.username &&\n                                <button className='roomButtons' value={room.id} onClick={handleDelete}>Delete Room</ button>\n                            }\n                            <button className='roomButtons' value={room.id} onClick={(event) => navigator.clipboard.writeText(event.target.value)}>Invite Code</button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n\n    return (\n        <div className='lobby'>\n            <form className=\"form-inline\" onSubmit={handleCreate}>\n                <input id=\"roomName\" placeholder=\"Enter room name\" value={createName} onChange={handleCreateNameChange} />\n                <input type=\"password\" id=\"roomPass\" placeholder=\"Enter room password\" value={createPass} onChange={handleCreatePassChange} />\n                <button type=\"submit\">Create Room</button>\n            </form>\n            <form className=\"form-inline\" onSubmit={handleJoin}>\n                <input id=\"joinId\" placeholder=\"Enter room ID\" value={joinName} onChange={handleJoinNameChange} />\n                <input type=\"password\" id=\"joinPass\" placeholder=\"Enter room password\" value={joinPass} onChange={handleJoinPassChange} />\n                <button type=\"submit\">Join Room</button>\n            </form>\n            <h2>Your Rooms</h2>\n            {listRooms(rooms)}\n            <button id='logout' className='roomButtons' onClick={handleLogout}>Log Out</button>\n        </div >\n    )\n}\n\nexport default Lobby","import axios from 'axios'\nconst baseUrl = '/login'\n\nconst login = async credential => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/signup'\n\nconst signup = async credential => {\n    const response = await axios.post(baseUrl, credential)\n    return response.data\n}\n\nexport default { signup }","import axios from 'axios'\nconst baseUrl = '/room'\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getRooms = () => {\n    const config = { headers: { Authorization: token } }\n\n    const request = axios.get(baseUrl, config)\n    return request.then(response => response.data)\n}\n\nconst createRoom = async newRoom => {\n    const config = { headers: { Authorization: token } }\n\n    const response = await axios.post(baseUrl, newRoom, config)\n    return response.data\n}\n\nconst leaveRoom = async id => {\n    const config = { headers: { Authorization: token } }\n\n    await axios.patch(`${baseUrl}/leave/${id}`, null, config)\n}\n\nconst deleteRoom = async id => {\n    const config = { headers: { Authorization: token } }\n\n    await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nconst joinRoom = async (id, password) => {\n    const config = { headers: { Authorization: token } }\n\n    await axios.patch(`${baseUrl}/join/${id}`, { password }, config)\n}\n\nconst enterRoom = async id => {\n    const config = { headers: { Authorization: token } }\n\n    const response = await axios.get(`${baseUrl}/${id}`, config)\n    return response.data\n}\n\nconst sendMessage = async (id, newMessage) => {\n    const config = { headers: { Authorization: token } }\n    const response = await axios.post(`${baseUrl}/${id}/message`, newMessage, config)\n    return response.data\n}\n\nconst getRoom = enterRoom\n\nexport default { setToken, getRooms, createRoom, leaveRoom, joinRoom, deleteRoom, enterRoom, getRoom, sendMessage }","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\nimport moment from 'moment';\nimport TextareaAutosize from 'react-textarea-autosize'\n\n\nconst Room = ({\n    handleMessageChange,\n    exitRoom,\n    sendMessage,\n    messageContent,\n    room,\n}) => {\n    return (\n        <div>\n            <div>\n                <h2 className='roomHeader'>Welcome to {room.roomName}</h2>\n                <button className='exitRoomButton' onClick={exitRoom}>Exit Room</button>\n                <ol className='messages'>\n                    {room.messages.map(message => (\n                        <li className='message' key={message.id}>\n                            <b className='messageUser'>{message.user}</b>\n                            <small> - {moment(message.date).fromNow()}</small>\n                            <ol>\n                                <li>{message.content}</li>\n                            </ol>\n                        </li>\n                    ))}\n                </ol>\n            </div>\n            <div>\n                <form id='messageForm' className='form-inline' onSubmit={sendMessage}>\n                    <TextareaAutosize\n                        className='messageField' spellCheck='true'\n                        value={messageContent} form='messageForm'\n                        onChange={handleMessageChange} />\n                    <button id='sendMessageButton' type=\"submit\">Send</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Room","import React, { useState, useEffect } from 'react'\nimport Form from './components/main'\nimport Lobby from './components/lobby'\nimport loginService from './services/login'\nimport signupService from './services/signup'\nimport lobbyService from './services/lobby'\nimport Notification from './components/notification'\nimport Room from './components/room'\n\n\nfunction App() {\n  const [userNameField, setUserNameField] = useState('')\n  const [passField, setPassField] = useState('')\n  const [user, setUser] = useState(null)\n  const [rooms, setRooms] = useState([])\n  const [status, setStatus] = useState(true)\n  const [createRoomName, setCreateRoomName] = useState('')\n  const [createRoomPass, setCreateRoomPass] = useState('')\n  const [joinRoomName, setJoinRoomName] = useState('')\n  const [joinRoomPass, setJoinRoomPass] = useState('')\n  const [currentRoom, setCurrentRoom] = useState(null)\n  const [messageToSend, setMessageToSend] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const token = window.localStorage.getItem('loggedInUser')\n\n  useEffect(() => {\n    const loggedUserJSON = token\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      lobbyService.setToken(user.token)\n    }\n  }, [token])\n\n  useEffect(() => {\n    lobbyService\n      .getRooms()\n      .then(rooms => {\n        setRooms(rooms)\n      }).catch(_ => console.log('waiting for user login'))\n  }, [rooms.length, token])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n      if (currentRoom !== null) {\n        lobbyService\n          .getRoom(currentRoom.id)\n          .then(room => {\n            setCurrentRoom(room)\n          }).catch(_ => console.log('waiting for user to enter a room'))\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [currentRoom])\n\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username: userNameField,\n        password: passField\n      })\n\n      window.localStorage.setItem(\n        'loggedInUser', JSON.stringify(user)\n      )\n\n      lobbyService.setToken(user.token)\n      setUser(user)\n      setUserNameField('')\n      setPassField('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSignup = async (event) => {\n    event.preventDefault()\n\n    try {\n\n      const err = new Error()\n      err.response = {\n        data: {\n          error: \"password too short: at least 6 characters required\"\n        }\n      }\n\n      if (passField.trim().length < 6) throw err\n\n      await signupService.signup({\n        username: userNameField.trim(),\n        password: passField.trim()\n      })\n\n      setUserNameField('')\n      setPassField('')\n      setStatus(!status)\n    } catch (error) {\n      if (error.response.data.error.includes('User validation failed')) {\n        setErrorMessage(\"username either too short or already taken\")\n      } else {\n        setErrorMessage(error.response.data.error)\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCreateRoom = async (event) => {\n\n    event.preventDefault()\n\n    try {\n\n      const err = new Error()\n      err.response = {\n        data: {\n          error: \"room password too short: at least 6 characters required\"\n        }\n      }\n\n      if (createRoomPass.trim().length < 6) throw err\n      const newRoom = await lobbyService.createRoom({\n        roomName: createRoomName.trim(),\n        roomPass: createRoomPass.trim()\n      })\n\n      setRooms(rooms.concat(newRoom))\n      setCreateRoomName('')\n      setCreateRoomPass('')\n    } catch (error) {\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLeaveRoom = async (event) => {\n\n    try {\n      const id = event.target.value\n      await lobbyService.leaveRoom(id)\n\n      setRooms(rooms.filter((room) => room.id === id))\n    } catch (error) {\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDeleteRoom = async (event) => {\n\n    try {\n      const id = event.target.value\n      await lobbyService.deleteRoom(id)\n\n      setRooms(rooms.filter((room) => room.id === id))\n    } catch (error) {\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleJoinRoom = async (event) => {\n    event.preventDefault()\n\n    try {\n      await lobbyService.joinRoom(joinRoomName, joinRoomPass)\n      setRooms(rooms.concat(joinRoomName))\n      setJoinRoomName('')\n      setJoinRoomPass('')\n    } catch (error) {\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleEnterRoom = async (event) => {\n\n    try {\n      const room = await lobbyService.enterRoom(event.target.value)\n      setCurrentRoom(room)\n      window.scrollTo(0, document.body.scrollHeight)\n    } catch (error) {\n      setErrorMessage(error.response)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSendMessage = async (event) => {\n    try {\n      event.preventDefault()\n\n      const response = await lobbyService.sendMessage(currentRoom.id, { content: messageToSend })\n      setCurrentRoom(response)\n      setMessageToSend('')\n    } catch (error) {\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const changeStatus = () => {\n    setStatus(!status)\n    setUserNameField('')\n    setPassField('')\n  }\n\n  const handleFormSubmit = (status) => status ? handleLogin : handleSignup\n\n  const form = () => {\n    return (\n      <div>\n        {status === true ? <p className='status'>Logging in</p> : <p className='status'> Signing up</p>}\n        <Form\n          handleSubmit={handleFormSubmit(status)}\n          handleUsernameChange={(event) => setUserNameField(event.target.value)}\n          handlePasswordChange={(event) => setPassField(event.target.value)}\n          status={status}\n          username={userNameField}\n          password={passField} />\n        {status === true ?\n          <button className='buttonLogin' onClick={changeStatus}>\n            Need to signup instead?\n          </button>\n          :\n          <button className='buttonLogin' onClick={changeStatus}>\n            Already have an account?\n        </button>}\n      </ div>)\n  }\n\n  const lobby = () => {\n    return (\n      <Lobby\n        handleCreateNameChange={(event) => setCreateRoomName(event.target.value)}\n        handleCreatePassChange={(event) => setCreateRoomPass(event.target.value)}\n        handleJoinNameChange={(event) => setJoinRoomName(event.target.value)}\n        handleJoinPassChange={(event) => setJoinRoomPass(event.target.value)}\n        createName={createRoomName}\n        createPass={createRoomPass}\n        joinName={joinRoomName}\n        joinPass={joinRoomPass}\n        handleCreate={handleCreateRoom}\n        handleDelete={handleDeleteRoom}\n        handleLeave={handleLeaveRoom}\n        handleJoin={handleJoinRoom}\n        handleEnter={handleEnterRoom}\n        handleLogout={(event) => {\n          window.localStorage.removeItem('loggedInUser')\n          lobbyService.setToken(null)\n          setCurrentRoom(null)\n          setUser(null)\n        }}\n        user={user}\n        rooms={rooms} />\n    )\n  }\n\n  const room = () => {\n    return (\n      <Room\n        room={currentRoom}\n        exitRoom={() => setCurrentRoom(null)}\n        messageContent={messageToSend}\n        sendMessage={handleSendMessage}\n        handleMessageChange={(event) => {\n          setMessageToSend(event.target.value)\n          window.scrollTo(0, document.body.scrollHeight)\n        }}\n      />\n    )\n  }\n\n  return (\n    <div>\n      <h1 className='header'>Secret Chat</h1>\n      <Notification message={errorMessage} />\n      {currentRoom === null ? user === null ?\n        form() :\n        lobby()\n        :\n        room()\n      }\n    </ div >\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}